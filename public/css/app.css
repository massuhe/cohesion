.navbar-personalizado {
  padding-bottom: 0px;
  padding-top: 3px;
  box-shadow: 0px 0px 2px #888888;
}

.gym-logo {
  width: 50px;
  height: 50px;
  background-color: red;
  position: absolute;
  border-radius: 100%;
  left: 50%;
  top: 25%;
  display: none;
}

.menu-item-1 {
  margin-right: 3px;
  margin-left: 3px;
  display: inline-block;
  position: relative;
}

.menu-item-1:hover .menu-item-1-texto,
.menu-item-1:hover .dropdown-toggle:after {
  color: #f57943;
}

.menu-item-1:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 0;
  background: transparent;
  transition: width .2s ease, background-color .2s ease;
}

.menu-item-1:hover:after {
  width: 100%;
  background: #f57943;
}

.menu-item-1 .menu-item-1-texto,
.menu-item-1 .dropdown-toggle:after {
  color: gray;
  transition: color .2s ease;
}

.menu-item-1.active .menu-item-1-texto {
  color: #f57943;
}

.menu-item-1.active:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 100%;
  background: #f57943;
  transition: width .2s ease, background-color .2s ease;
}

.menu-dropdown-item-1 {
  display: inline-block;
  color: gray;
  padding: 0px;
  padding-right: 10px;
}

.menu-dropdown-item-1:hover {
  background: initial;
  color: #f57943;
}

.menu-dropdown-item-1:before {
  content: '';
  display: inline-block;
  height: 20px;
  width: 0;
  background: transparent;
  margin-right: 10px;
  margin-bottom: -4px;
  transition: width .2s ease;
}

.menu-dropdown-item-1:hover:before {
  width: 4px;
  background: #f57943;
}

.menu-item-2 {
  margin-right: 3px;
  margin-left: 3px;
  display: inline-block;
  position: relative;
}

.menu-item-2:hover .menu-item-2-texto,
.menu-item-2:hover .dropdown-toggle:after {
  color: #ebaa44;
}

.menu-item-2:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 0;
  background: transparent;
  transition: width .2s ease, background-color .2s ease;
}

.menu-item-2:hover:after {
  width: 100%;
  background: #ebaa44;
}

.menu-item-2 .menu-item-2-texto,
.menu-item-2 .dropdown-toggle:after {
  color: gray;
  transition: color .2s ease;
}

.menu-item-2.active .menu-item-2-texto {
  color: #ebaa44;
}

.menu-item-2.active:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 100%;
  background: #ebaa44;
  transition: width .2s ease, background-color .2s ease;
}

.menu-dropdown-item-2 {
  display: inline-block;
  color: gray;
  padding: 0px;
  padding-right: 10px;
}

.menu-dropdown-item-2:hover {
  background: initial;
  color: #ebaa44;
}

.menu-dropdown-item-2:before {
  content: '';
  display: inline-block;
  height: 20px;
  width: 0;
  background: transparent;
  margin-right: 10px;
  margin-bottom: -4px;
  transition: width .2s ease;
}

.menu-dropdown-item-2:hover:before {
  width: 4px;
  background: #ebaa44;
}

.menu-item-3 {
  margin-right: 3px;
  margin-left: 3px;
  display: inline-block;
  position: relative;
}

.menu-item-3:hover .menu-item-3-texto,
.menu-item-3:hover .dropdown-toggle:after {
  color: #e1d445;
}

.menu-item-3:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 0;
  background: transparent;
  transition: width .2s ease, background-color .2s ease;
}

.menu-item-3:hover:after {
  width: 100%;
  background: #e1d445;
}

.menu-item-3 .menu-item-3-texto,
.menu-item-3 .dropdown-toggle:after {
  color: gray;
  transition: color .2s ease;
}

.menu-item-3.active .menu-item-3-texto {
  color: #e1d445;
}

.menu-item-3.active:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 100%;
  background: #e1d445;
  transition: width .2s ease, background-color .2s ease;
}

.menu-dropdown-item-3 {
  display: inline-block;
  color: gray;
  padding: 0px;
  padding-right: 10px;
}

.menu-dropdown-item-3:hover {
  background: initial;
  color: #e1d445;
}

.menu-dropdown-item-3:before {
  content: '';
  display: inline-block;
  height: 20px;
  width: 0;
  background: transparent;
  margin-right: 10px;
  margin-bottom: -4px;
  transition: width .2s ease;
}

.menu-dropdown-item-3:hover:before {
  width: 4px;
  background: #e1d445;
}

.menu-item-4 {
  margin-right: 3px;
  margin-left: 3px;
  display: inline-block;
  position: relative;
}

.menu-item-4:hover .menu-item-4-texto,
.menu-item-4:hover .dropdown-toggle:after {
  color: #b5d548;
}

.menu-item-4:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 0;
  background: transparent;
  transition: width .2s ease, background-color .2s ease;
}

.menu-item-4:hover:after {
  width: 100%;
  background: #b5d548;
}

.menu-item-4 .menu-item-4-texto,
.menu-item-4 .dropdown-toggle:after {
  color: gray;
  transition: color .2s ease;
}

.menu-item-4.active .menu-item-4-texto {
  color: #b5d548;
}

.menu-item-4.active:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 100%;
  background: #b5d548;
  transition: width .2s ease, background-color .2s ease;
}

.menu-dropdown-item-4 {
  display: inline-block;
  color: gray;
  padding: 0px;
  padding-right: 10px;
}

.menu-dropdown-item-4:hover {
  background: initial;
  color: #b5d548;
}

.menu-dropdown-item-4:before {
  content: '';
  display: inline-block;
  height: 20px;
  width: 0;
  background: transparent;
  margin-right: 10px;
  margin-bottom: -4px;
  transition: width .2s ease;
}

.menu-dropdown-item-4:hover:before {
  width: 4px;
  background: #b5d548;
}

.menu-item-5 {
  margin-right: 3px;
  margin-left: 3px;
  display: inline-block;
  position: relative;
}

.menu-item-5:hover .menu-item-5-texto,
.menu-item-5:hover .dropdown-toggle:after {
  color: #85c94b;
}

.menu-item-5:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 0;
  background: transparent;
  transition: width .2s ease, background-color .2s ease;
}

.menu-item-5:hover:after {
  width: 100%;
  background: #85c94b;
}

.menu-item-5 .menu-item-5-texto,
.menu-item-5 .dropdown-toggle:after {
  color: gray;
  transition: color .2s ease;
}

.menu-item-5.active .menu-item-5-texto {
  color: #85c94b;
}

.menu-item-5.active:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 100%;
  background: #85c94b;
  transition: width .2s ease, background-color .2s ease;
}

.menu-dropdown-item-5 {
  display: inline-block;
  color: gray;
  padding: 0px;
  padding-right: 10px;
}

.menu-dropdown-item-5:hover {
  background: initial;
  color: #85c94b;
}

.menu-dropdown-item-5:before {
  content: '';
  display: inline-block;
  height: 20px;
  width: 0;
  background: transparent;
  margin-right: 10px;
  margin-bottom: -4px;
  transition: width .2s ease;
}

.menu-dropdown-item-5:hover:before {
  width: 4px;
  background: #85c94b;
}

.menu-item-6 {
  margin-right: 3px;
  margin-left: 3px;
  display: inline-block;
  position: relative;
}

.menu-item-6:hover .menu-item-6-texto,
.menu-item-6:hover .dropdown-toggle:after {
  color: #60bc4f;
}

.menu-item-6:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 0;
  background: transparent;
  transition: width .2s ease, background-color .2s ease;
}

.menu-item-6:hover:after {
  width: 100%;
  background: #60bc4f;
}

.menu-item-6 .menu-item-6-texto,
.menu-item-6 .dropdown-toggle:after {
  color: gray;
  transition: color .2s ease;
}

.menu-item-6.active .menu-item-6-texto {
  color: #60bc4f;
}

.menu-item-6.active:after {
  content: '';
  display: block;
  margin: auto;
  height: 3px;
  width: 100%;
  background: #60bc4f;
  transition: width .2s ease, background-color .2s ease;
}

.menu-dropdown-item-6 {
  display: inline-block;
  color: gray;
  padding: 0px;
  padding-right: 10px;
}

.menu-dropdown-item-6:hover {
  background: initial;
  color: #60bc4f;
}

.menu-dropdown-item-6:before {
  content: '';
  display: inline-block;
  height: 20px;
  width: 0;
  background: transparent;
  margin-right: 10px;
  margin-bottom: -4px;
  transition: width .2s ease;
}

.menu-dropdown-item-6:hover:before {
  width: 4px;
  background: #60bc4f;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */